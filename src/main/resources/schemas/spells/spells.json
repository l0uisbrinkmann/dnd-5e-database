{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "spells.json",
  "version": "1.9.12",
  "title": "Spells",
  "type": "object",
  "$defs": {
    "spellData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "level": {
          "type": "integer"
        },
        "school": {
          "$ref": "resource:/schemas/util.json#/$defs/spellSchool"
        },
        "subschools": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "contaminated"
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "meta": {
          "type": "object",
          "properties": {
            "ritual": {
              "type": "boolean"
            },
            "technomagic": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "time": {
          "type": "array",
          "items": {
            "$ref": "resource:/schemas/util-time.json#/$defs/time"
          }
        },
        "range": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "special",
                "point",
                "line",
                "cube",
                "cone",
                "radius",
                "sphere",
                "hemisphere",
                "cylinder"
              ]
            },
            "distance": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "feet",
                    "yards",
                    "miles",
                    "self",
                    "touch",
                    "unlimited",
                    "plane",
                    "sight"
                  ]
                },
                "amount": {
                  "type": "integer"
                }
              },
              "required": [
                "type"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "type"
          ],
          "additionalProperties": false
        },
        "components": {
          "type": "object",
          "properties": {
            "v": {
              "type": "boolean"
            },
            "s": {
              "type": "boolean"
            },
            "m": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string"
                    },
                    "cost": {
                      "description": "In copper pieces.",
                      "type": "number"
                    },
                    "consume": {
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "string",
                          "const": "optional"
                        }
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": [
                    "boolean",
                    "string"
                  ]
                }
              ]
            },
            "r": {
              "description": "\"Royalty\" components, as introduced in Acquisitions Incorporated",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "duration": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/duration"
          }
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "resource:/schemas/entry.json"
          }
        },
        "entriesHigherLevel": {
          "type": "array",
          "items": {
            "$ref": "resource:/schemas/entry.json"
          }
        },
        "source": {
          "$ref": "resource:/schemas/util.json#/$defs/source"
        },
        "page": {
          "$ref": "resource:/schemas/util.json#/$defs/page"
        },
        "additionalSources": {
          "$ref": "resource:/schemas/util.json#/$defs/additionalSources"
        },
        "otherSources": {
          "$ref": "resource:/schemas/util.json#/$defs/otherSources"
        },
        "damageInflict": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "resource:/schemas/util.json#/$defs/dataDamageType"
          }
        },
        "damageResist": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "resource:/schemas/util.json#/$defs/dataDamageType"
          }
        },
        "damageImmune": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "resource:/schemas/util.json#/$defs/dataDamageType"
          }
        },
        "damageVulnerable": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "resource:/schemas/util.json#/$defs/dataDamageType"
          }
        },
        "conditionInflict": {
          "$ref": "resource:/schemas/util.json#/$defs/tagsConditions"
        },
        "conditionImmune": {
          "$ref": "resource:/schemas/util.json#/$defs/tagsConditions"
        },
        "savingThrow": {
          "$ref": "resource:/schemas/util.json#/$defs/tagsSavingThrow"
        },
        "abilityCheck": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "strength",
              "constitution",
              "dexterity",
              "intelligence",
              "wisdom",
              "charisma"
            ]
          }
        },
        "spellAttack": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "description": "M: Melee\n R: Ranged\n O: Other/Unknown",
            "enum": [
              "M",
              "R",
              "O"
            ]
          }
        },
        "areaTags": {
          "description": "By convention, only the effects of the spell cast at its base level are considered when populating these.\n C: Cube\n H: Hemisphere\n L: Line\n MT: Multiple Targets\n N: Cone\n Q: Square\n R: Circle\n ST: Single Target\n S: Sphere\n W: Wall\n Y: Cylinder",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ST",
              "MT",
              "R",
              "N",
              "C",
              "Y",
              "H",
              "L",
              "S",
              "Q",
              "W"
            ]
          }
        },
        "miscTags": {
          "type": "array",
          "description": "AAD: Additional Attack Damage\n ADV: Grants Advantage\n DFT: Difficult Terrain\n FMV: Forced Movement\n HL: Healing\n LGT: Creates Light\n LGTS: Creates Sunlight\n MAC: Modifies AC\n OBJ: Affects Objects\n OBS: Obscures Vision\n PIR: Permanent If Repeated\n PRM: Permanent Effects\n PS: Plane Shifting\nRO: Rollable Effects\n SCL: Scaling Effects\n  SMN: Summons Creature\n SGT: Requires Sight\n THP: Grants Temporary Hit Points\n TP: Teleportation\n UBA: Uses Bonus Action",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "AAD",
              "ADV",
              "DFT",
              "FMV",
              "HL",
              "LGT",
              "LGTS",
              "MAC",
              "OBJ",
              "OBS",
              "PIR",
              "PRM",
              "PS",
              "RO",
              "SCL",
              "SMN",
              "SGT",
              "THP",
              "TP",
              "UBA"
            ]
          }
        },
        "affectsCreatureType": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "resource:/schemas/util.json#/$defs/creatureType"
          }
        },
        "srd": {
          "$ref": "resource:/schemas/util.json#/$defs/srd"
        },
        "basicRules": {
          "$ref": "resource:/schemas/util.json#/$defs/basicRules"
        },
        "legacy": {
          "$ref": "resource:/schemas/util.json#/$defs/legacy"
        },
        "scalingLevelDice": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/scalingLevelDiceItem"
              }
            },
            {
              "$ref": "#/$defs/scalingLevelDiceItem"
            }
          ]
        },
        "hasFluff": {
          "type": "boolean"
        },
        "hasFluffImages": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "spell": {
      "$ref": "resource:/schemas/spells/spell.json"
    },
    "duration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "instant",
            "timed",
            "permanent",
            "special"
          ]
        },
        "duration": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "turn",
                "round",
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "amount": {
              "type": "integer"
            },
            "upTo": {
              "type": "boolean"
            }
          },
          "required": [
            "type"
          ],
          "additionalProperties": false
        },
        "concentration": {
          "type": "boolean"
        },
        "ends": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The examples given are short forms that are automatically expanded to \"discharged\", \"dispelled\" & \"triggered\".\nHomebrew files should state custom end conditions in full.",
            "enum": [
              "dispel",
              "trigger",
              "discharge"
            ]
          }
        },
        "condition": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "class": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "$ref": "resource:/schemas/util.json#/$defs/source"
        },
        "definedInSource": {
          "$ref": "resource:/schemas/util.json#/$defs/source"
        }
      },
      "required": [
        "name",
        "source"
      ],
      "additionalProperties": false
    },
    "scalingLevelDiceItem": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "scaling": {
          "type": "object",
          "patternProperties": {
            "\\d+": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "spell": {
      "type": "array",
      "items": {
        "javaType": "com.louisbrinkmann.dnd5edatabase.models.spells.Spell",
        "type": "object",
        "$ref": "#/$defs/spell"
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "_meta": {
      "$ref": "resource:/schemas/util.json#/$defs/metaBlock"
    }
  },
  "required": [
    "spell"
  ],
  "additionalProperties": false
}
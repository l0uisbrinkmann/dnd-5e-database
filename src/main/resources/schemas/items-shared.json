{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "items-shared.json",
	"title": "Shared Item Schema",
	"description": "Shared item definitions to be used in item schemas.",
	"version": "1.0.8",
	"$defs": {
		"_itemModifySpeedEqual": {
			"type": "string",
			"enum": [
				"walk",
				"burrow",
				"climb",
				"fly",
				"swim"
			]
		},
		"itemModifySpeed": {
			"type": "object",
			"properties": {
				"multiply": {
					"type": "object",
					"properties": {
						"walk": {
							"type": "number"
						},
						"burrow": {
							"type": "number"
						},
						"climb": {
							"type": "number"
						},
						"fly": {
							"type": "number"
						},
						"swim": {
							"type": "number"
						},
						"*": {
							"type": "number"
						}
					},
					"additionalProperties": false
				},
				"static": {
					"type": "object",
					"properties": {
						"walk": {
							"type": "number"
						},
						"burrow": {
							"type": "number"
						},
						"climb": {
							"type": "number"
						},
						"fly": {
							"type": "number"
						},
						"swim": {
							"type": "number"
						},
						"*": {
							"type": "number"
						}
					},
					"additionalProperties": false
				},
				"equal": {
					"type": "object",
					"properties": {
						"walk": {
							"$ref": "#/$defs/_itemModifySpeedEqual"
						},
						"burrow": {
							"$ref": "#/$defs/_itemModifySpeedEqual"
						},
						"climb": {
							"$ref": "#/$defs/_itemModifySpeedEqual"
						},
						"fly": {
							"$ref": "#/$defs/_itemModifySpeedEqual"
						},
						"swim": {
							"$ref": "#/$defs/_itemModifySpeedEqual"
						}
					},
					"additionalProperties": false
				},
				"bonus": {
					"type": "object",
					"properties": {
						"walk": {
							"type": "number"
						},
						"burrow": {
							"type": "number"
						},
						"climb": {
							"type": "number"
						},
						"fly": {
							"type": "number"
						},
						"swim": {
							"type": "number"
						},
						"*": {
							"type": "number"
						}
					},
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"itemRarity": {
			"anyOf": [
				{
					"$ref": "util.json#/$defs/rarity"
				},
				{
					"type": "string",
					"description": "\"none\" is for mundane items. \"unknown (magic)\" is for miscellaneous magical items. \"unknown\" is for miscellaneous mundane items. \"varies\" is for item groups, or for magic variants, where it has the special functionality of maintaining a base item's rarity when creating specific variants.",
					"enum": [
						"none",
						"unknown",
						"unknown (magic)",
						"varies"
					]
				}
			]
		},
		"itemRecharge": {
			"enum": [
				"round",
				"restShort",
				"restLong",
				"dawn",
				"dusk",
				"midnight",
				"week",
				"month",
				"year",
				"decade",
				"century",
				"special"
			]
		},
		"itemRechargeAmount": {
			"type": [
				"integer",
				"string"
			]
		},
		"itemType": {
			"type": "string",
			"$comment": "Dumped from `Object(Parser.ITEM_TYPE_JSON_TO_ABV)`",
			"description": "$: Treasure\n $A: Treasure (Art Object)\n $C: Treasure (Coinage)\n $G: Treasure (Gemstone)\n A: Ammunition\n AF: Ammunition (futuristic)\n AIR: Vehicle (air)\n AT: Artisan Tool\n EM: Eldritch Machine\n EXP: Explosive\n FD: Food and Drink\n G: Adventuring Gear\n GS: Gaming Set\n GV: Generic Variant\n HA: Heavy Armor\n IDG: Illegal Drug\n INS: Instrument\n LA: Light Armor\n M: Melee Weapon\n MA: Medium Armor\n MNT: Mount\n MR: Master Rune \n OTH: Other\n P: Potion\n R: Ranged Weapon\n RD: Rod\n RG: Ring\n S: Shield\n SC: Scroll\n SCF: Spellcasting Focus\n SHP: Vehicle (water)\n SPC: Vehicle (space)\n T: Tool\n TAH: Tack and Harness\n TG: Trade Good\n VEH: Vehicle (land)\n WD: Wand",
			"enum": [
				"$",
				"$A",
				"$C",
				"$G",
				"A",
				"AF",
				"AIR",
				"AT",
				"EM",
				"EXP",
				"FD",
				"G",
				"GS",
				"GV",
				"HA",
				"IDG",
				"INS",
				"LA",
				"M",
				"MA",
				"MNT",
				"MR",
				"OTH",
				"P",
				"R",
				"RD",
				"RG",
				"S",
				"SC",
				"SCF",
				"SHP",
				"SPC",
				"T",
				"TAH",
				"TG",
				"VEH",
				"WD"
			]
		},
		"itemAge": {
			"type": "string",
			"enum": [
				"futuristic",
				"modern",
				"renaissance"
			]
		},
		"itemProperty": {
			"type": "array",
			"description": "2H: Two-Handed\n A: Ammunition\n AF: Ammunition (futuristic)\n BF: Burst Fire\n EM: Eldritch Machine\n ER: Extended Reach\n F: Finesse\n H: Heavy\n L: Light\n LD: Loading\n OTH: Other\n R: Reach\n RLD: Reload\n S: Special\n T: Thrown\n V: Versatile\n Vst: Vestige of Divergence",
			"items": {
				"type": "string",
				"enum": [
					"2H",
					"A",
					"AF",
					"BF",
					"EM",
					"ER",
					"F",
					"H",
					"L",
					"LD",
					"OTH",
					"R",
					"RLD",
					"S",
					"T",
					"V",
					"Vst"
				]
			}
		},
		"itemScfType": {
			"type": "string",
			"enum": [
				"arcane",
				"druid",
				"holy"
			]
		},
		"itemTier": {
			"type": "string",
			"description": "Item Tier as per XGE p135",
			"enum": [
				"minor",
				"major"
			]
		},
		"itemWeaponCategory": {
			"type": "string",
			"enum": [
				"simple",
				"martial"
			]
		},
		"itemAmmoType": {
			"type": "string",
			"enum": [
				"energy cell",
				"modern bullet",
				"blowgun needle|phb",
				"crossbow bolt|phb",
				"arrow|phb",
				"renaissance bullet",
				"sling bullet|phb"
			]
		},
		"itemMastery": {
			"type": "array",
			"items": {
				"type": "string"
			},
			"minItems": 1,
			"uniqueItems": true
		},
		"itemCarryingCapacity": {
			"type": "integer",
			"description": "Of a mount/beast, not a container."
		},
		"itemSpeed": {
			"type": "integer"
		},
		"itemReach": {
			"type": "integer"
		},
		"itemDexterityMax": {
			"description": "Maximum dexterity modifier for medium armor.",
			"type": [
				"integer",
				"null"
			]
		},
		"packContents": {
			"type": "array",
			"items": {
				"oneOf": [
					{
						"type": "string"
					},
					{
						"type": "object",
						"properties": {
							"special": {
								"type": "string"
							},
							"quantity": {
								"type": "integer"
							}
						},
						"additionalProperties": false,
						"required": [
							"special"
						]
					},
					{
						"type": "object",
						"properties": {
							"item": {
								"type": "string"
							},
							"quantity": {
								"type": "integer"
							},
							"displayName": {
								"type": "string"
							}
						},
						"additionalProperties": false,
						"required": [
							"item"
						],
						"minProperties": 2
					}
				]
			}
		}
	}
}